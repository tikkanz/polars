window.SIDEBAR_ITEMS = {"enum":[["AccessError","An access error for `ValueType`"],["ExtendedValueType","Extended types that have no native representation in JSON"],["StaticNode","Static tape node"],["ValueType","Types of JSON values"]],"fn":[["deserialize","Parses a slice of bytes into a Value dom. This function will rewrite the slice to de-escape strings. As we reference parts of the input slice the resulting dom has the same lifetime as the slice it was created from."]],"mod":[["borrowed","This module holds the two dom implementations we use. We distinguish between owned and borrowed. The difference being is that the borrowed value will use `&str` as its string type, referencing the input, while owned will allocate a new String for each value."],["generator","Traits for serializing JSON"],["owned","Owned, lifetimeless version of the value for times when lifetimes are to be avoided"],["prelude","Prelude for traits"],["tape","Tape implementation"]],"struct":[["TryTypeError","A type error thrown by the `try_*` functions"]],"trait":[["Array","Functions guaranteed for any array object"],["Builder","Support of builder methods for traits."],["Mutable","Mutatability for values"],["Object","A JSON Object"],["Value","The `Value` exposes common interface for values, this allows using both `BorrowedValue` and `OwnedValue` nearly interchangable"],["ValueAccess","Trait to allow accessing data inside a Value"],["ValueInto","A trait that specifies how to turn the Value `into` itâ€™s sub types"],["Writable","A Value that can be serialized and written"]]};